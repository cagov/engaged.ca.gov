<script>

let ringchart_vars = {
  "wedges": [{'nom':'{{ modules.ring_chart.label_1 }}', 'percent':{{ modules.ring_chart.tally_1 }},  'color':'#1c2745', 'angle': -Math.PI/4},
             {'nom':'{{ modules.ring_chart.label_2 }}', 'percent':{{ modules.ring_chart.tally_2 }}, 'color':'#e6f0f5', 'angle': Math.PI},
             {'nom':'{{ modules.ring_chart.label_3 }}', 'percent':{{ modules.ring_chart.tally_3 }}, 'color':'#5489a3', 'angle': Math.PI + Math.PI/3}],
  "ring_radius": 152,
  "caption_radius": 212,
  "linewidth": 21,
  "render_handle": null,
  "phase_handle": null,
  "phase": -1,
  "gap_angle": 10,
  "canvas": null,
  "ctx": null
};

function render_ringchart(t) 
{ // t goes from 0-1
    console.log("render_ringchart", t);
    let ctx = ringchart_vars.ctx;
    if (!ctx || t == 0) {
        return;
    }
    // Set white background
    ctx.save();
    ctx.globalAlpha = 1;
    ctx.fillStyle = "#fff";
    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
    ctx.restore();
    let cx = ctx.canvas.width / 2;
    let cy = ctx.canvas.height / 2;

    let r = ringchart_vars.ring_radius; //mapv(t, 0, 1, ringchart_vars.ring_radius*0.3, ringchart_vars.ring_radius);
    var curAngle = (-Math.PI / 2);
    var gapAngle = ringchart_vars.gap_angle * Math.PI / 180;
    for (let i = 0; i < ringchart_vars.wedges.length; i++) {
        let wedge = ringchart_vars.wedges[i];
        let startAngle = curAngle;
        let endAngle = startAngle + (Math.PI * 2 * t*wedge.percent/100);
        let arc = new Path2D();
        arc.arc(cx, cy, r, startAngle+t*gapAngle/2, endAngle-t*gapAngle/2);
        ctx.strokeStyle = wedge.color;
        ctx.lineWidth = ringchart_vars.linewidth;
        ctx.lineCap = "round";
        ctx.stroke(arc);
        curAngle = endAngle;

        let capAngle = wedge.angle;
        ctx.save();
        let capX = cx + ringchart_vars.caption_radius * Math.cos(capAngle);
        let capY = cy + ringchart_vars.caption_radius * Math.sin(capAngle);
        // Render wedge.percent + "%" in 40pt bold, centered, 20px above capY
        ctx.font = "bold 30px Noto Sans Display";
        ctx.fillStyle = "#000";
        ctx.textAlign = "center";
        ctx.textBaseline = "alphabetic";
        ctx.fillText(wedge.percent + "%", capX, capY - 5);

        // Render wedge.nom in 24pt regular, centered, 20px below capY
        ctx.font = "18px Noto Sans Display";
        ctx.fillStyle = "#000";
        ctx.textAlign = "center";
        ctx.textBaseline = "top";
        ctx.fillText(wedge.nom, capX, capY + 5);
        ctx.restore();
    }
}

function init_ringchart() {
    let canvas = document.getElementById("ringchart-canvas");
    let ctx = canvas.getContext("2d");
    canvas.width = 570;
    canvas.height = 500;
    ringchart_vars.ctx = ctx;
    ringchart_vars.canvas = canvas;
    canvas.style.opacity = 0;
    render_ringchart(0);
}

</script>